@section Scripts {
  @Scripts.Render("~/bundles/app")

  <script>

  </script>
}
<h3>Secure a Web API with Individual Accounts and Local Login in ASP.NET Web API 2.2</h3>
<p>The <a href="http://www.asp.net/web-api/overview/security/individual-accounts-in-web-api" target="_blank">article</a> where this code came from shows how to secure a web API using OAuth2 to authenticate against a membership database.</p>
<p>The code shows how to get and save an OAuth 2 token in the client session. It's very simple but also has nice demo of using <b>Knockout</b> with Forms submission</p>
<p>
  I have disabled HTTPS so that you can use Fiddler to easily see the various calls. Note that disabling HTTPS had to be done in nany places. Of particular note, the RequireHttpsAttribute filter is plugged in
  to the code twice. I'm guessing one is for MVC pipeline and the other for WEB API pipeline...I didn't investiagte. This threw me a curve as I had initially only disabled in the WebApiConfig class and basically got silent failures from the code and the other RequireHttps filter still being
  plugged in from RegisterGlobalFilters. Make sure to search the code for 'RequireHttps' to look into HTTPS operation.
</p>
<h4>Token with Custom Claim</h4>
<p>
  After registering and logging in use the 'Call API' button to make an API call, the Claim names from the Token are displayed in the Result section, see the ApplicationOAuthProvider.GrantResourceOwnerCredentials for where the Token is generated.
  <b>Great </b> <a href="http://odetocode.com/blogs/scott/archive/2015/01/15/using-json-web-tokens-with-katana-and-webapi.aspx" target="_blank"> article</a> by Scott Allen on web tokens and how to use them with simple authentication.
</p>
<div class="row">
  <div class="col-sm-4">
    <form data-bind="submit: callApi">
      <h3>Invoke API</h3>
      <div class="form-group">
        <label>User</label>
        <input class="form-control" type="text" readonly data-bind="value: user" />
      </div>
      <div class="form-group">
        <label style="color:blue;">Result</label>
        @*<input class="form-control" type="text" data-bind="value: result" />*@
        <div data-bind="html: result"></div>
      </div>
      <div class="form-group">
        <button type="submit" class="btn btn-default" data-bind="css:{ 'alert-info': user() != null && user().length > 0 }">Call API</button>
      </div>

    </form>
  </div>

  <div class="col-sm-4">
    <form data-bind="submit: register">
      <h3>Register</h3>
      <div class="form-group">
        <label>Email</label>
        <input class="form-control" type="text" data-bind="value: registerEmail" />
      </div>
      <div class="form-group">
        <label>Password</label>
        <input class="form-control" type="password" data-bind="value: registerPassword" />
      </div>
      <div class="form-group">
        <label>Confirm Password</label>
        <input class="form-control" type="password" data-bind="value: registerPassword2" />
      </div>
      <div class="form-group">
        <button type="submit" class="btn btn-default">Register</button>
      </div>
    </form>
  </div>

  <div class="col-sm-4">
    <h3>Log In</h3>
    <form data-bind="submit: login">
      <div class="form-group">
        <label>Email</label>
        <input class="form-control" type="text" data-bind="value: loginEmail" />
      </div>
      <div class="form-group">
        <label>Password</label>
        <input class="form-control" type="password" data-bind="value: loginPassword" />
      </div>
      <div class="form-group">
        <button type="submit" class="btn btn-default">Log In</button>
        <button data-bind="click: logout" class="btn btn-default">Log Out</button>
      </div>
    </form>

  </div>
</div>


